# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: APP Deployment CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    # Setup Node.js for the entire job
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Install Client Dependencies
    - name: Cache Client Dependencies
      uses: actions/cache@v2
      with:
        path: ./client/node_modules
        key: ${{ runner.os }}-client-${{ hashFiles('**/client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-client-
          
    - name: Install Client Dependencies
      run: npm ci
      working-directory: ./client/
      
    - name: Build Client
      run: npm run build
      working-directory: ./client/
      
    # Install Server Dependencies
    - name: Cache Server Dependencies
      uses: actions/cache@v2
      with:
        path: ./server/node_modules
        key: ${{ runner.os }}-server-${{ hashFiles('**/server/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-server-

    - name: Install Server Dependencies
      run: npm ci
      working-directory: ./server/

    - name: Build Server
      run: npm run build
      working-directory: ./server/
      
    # Optionally Reload Nginx if needed, assuming permissions are properly configured
    - name: Reload Nginx
      run: sudo systemctl reload nginx
